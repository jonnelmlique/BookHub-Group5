@{
    Layout = "~/Views/Shared/Layout/_AdminPage.cshtml";
}
@model List<BookHub_Group5.Models.Domain.sales>

<link href="~/css/admin/sales.css" rel="stylesheet" />
<div class="sales">
    <div class="search-sales">
        <div class="search-bar">
            <input type="text" class="search-txt" id="searchSalesInput" placeholder="Search" />
            <i class="fas fa-search"></i>
        </div>
        <div class="buttons">
            <div class="custom-select">
                <select>
                    <option value="0">Filter Sales:</option>
                    <option value="2">OVERALL</option>
                    <option value="2">BY DAY</option>
                    <option value="3">BY WEEK</option>
                    <option value="4">BY MONTH</option>
                    <option value="5">BY YEAR</option>
                </select>
            </div>
            <div class="date">
                <p> Specific Date</p>
                <input type="date" id="salesDateFilter" name="salesDateFilter" class="sales-date">
            </div>
        </div>
    </div>

    <div class="total-print">
      <div class="total-sales">
    <p>Total Sales : </p>
    <input type="text" value="@ViewBag.TotalSales" class="total-lbl" readonly />
</div>

        <div class="print">
            <button class="print-btn"><i class="fa fa-print" aria-hidden="true"></i>Print Sales</button>
        </div>
    </div>

    <div class="sales-table">
        <table id="salesTable">
            <thead>
                <tr>
                    <th>Buyer Email</th>
                    <th>Sale Date</th>
                    <th>Book Name</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var sales in Model)
                {
                    <tr>
                        <td>@sales.UserEmail</td>
                        <td>@sales.SaleDate</td>
                        <td>@sales.BookTitle</td>
                        <td>@sales.Price</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    </div>

    <script>
    $(document).ready(function () {
        $("#searchSalesInput").on("keyup", function () {
            console.log("Search input changed");
            var value = $(this).val().toLowerCase();
            $("#salesTable tbody tr").filter(function () {
                console.log("Filtering rows");
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });
    });

    </script>




<script>
    var x, i, j, l, ll, selElmnt, a, b, c;
    x = document.getElementsByClassName("custom-select");
    l = x.length;
    for (i = 0; i < l; i++) {
        selElmnt = x[i].getElementsByTagName("select")[0];
        ll = selElmnt.length;
        a = document.createElement("DIV");
        a.setAttribute("class", "select-selected");
        a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
        x[i].appendChild(a);
        b = document.createElement("DIV");
        b.setAttribute("class", "select-items select-hide");
        for (j = 1; j < ll; j++) {
            c = document.createElement("DIV");
            c.innerHTML = selElmnt.options[j].innerHTML;
            c.addEventListener("click", function (e) {
                var y, i, k, s, h, sl, yl;
                s = this.parentNode.parentNode.getElementsByTagName("select")[0];
                sl = s.length;
                h = this.parentNode.previousSibling;
                for (i = 0; i < sl; i++) {
                    if (s.options[i].innerHTML == this.innerHTML) {
                        s.selectedIndex = i;
                        h.innerHTML = this.innerHTML;
                        y = this.parentNode.getElementsByClassName("same-as-selected");
                        yl = y.length;
                        for (k = 0; k < yl; k++) {
                            y[k].removeAttribute("class");
                        }
                        this.setAttribute("class", "same-as-selected");
                        break;
                    }
                }
                h.click();
            });
            b.appendChild(c);
        }
        x[i].appendChild(b);
        a.addEventListener("click", function (e) {
            e.stopPropagation();
            closeAllSelect(this);
            this.nextSibling.classList.toggle("select-hide");
            this.classList.toggle("select-arrow-active");
        });
    }
    function closeAllSelect(elmnt) {
        var x, y, i, xl, yl, arrNo = [];
        x = document.getElementsByClassName("select-items");
        y = document.getElementsByClassName("select-selected");
        xl = x.length;
        yl = y.length;
        for (i = 0; i < yl; i++) {
            if (elmnt == y[i]) {
                arrNo.push(i)
            } else {
                y[i].classList.remove("select-arrow-active");
            }
        }
        for (i = 0; i < xl; i++) {
            if (arrNo.indexOf(i)) {
                x[i].classList.add("select-hide");
            }
        }
    }

    document.addEventListener("click", closeAllSelect);
</script>